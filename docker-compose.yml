version: '3.8'

services:
  # Ethereum execution client
  reth:
    image: ghcr.io/paradigmxyz/reth:latest
    container_name: reth-node
    restart: unless-stopped
    ports:
      - "8545:8545"    # JSON-RPC
      - "8546:8546"    # WebSocket
      - "30303:30303"  # P2P
    volumes:
      - reth_data:/root/.local/share/reth
    command: >
      node
      --chain mainnet
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --p2p.port 30303
      --discovery.port 30303
    networks:
      - stealth-net

  # Ethereum consensus client (Lighthouse)
  lighthouse:
    image: sigp/lighthouse:latest
    container_name: lighthouse-beacon
    restart: unless-stopped
    ports:
      - "5052:5052"    # HTTP API
      - "9000:9000"    # P2P
    volumes:
      - lighthouse_data:/root/.lighthouse
    command: >
      lighthouse bn
      --network mainnet
      --execution-endpoint http://reth:8545
      --execution-jwt /tmp/jwt.hex
      --checkpoint-sync-url https://mainnet-checkpoint-sync.attestant.io
      --http
      --http-address 0.0.0.0
      --http-port 5052
      --port 9000
      --discovery-port 9000
    depends_on:
      - reth
    networks:
      - stealth-net

  # Validator client
  validator:
    image: sigp/lighthouse:latest
    container_name: lighthouse-validator
    restart: unless-stopped
    volumes:
      - validator_keys:/root/.lighthouse/validators
    command: >
      lighthouse vc
      --network mainnet
      --beacon-nodes http://lighthouse:5052
      --suggested-fee-recipient 0x1234567890123456789012345678901234567890
    depends_on:
      - lighthouse
    networks:
      - stealth-net

  # nwaku node for RLN and privacy mesh
  nwaku-1:
    image: statusim/nwaku:latest
    container_name: nwaku-friend-1
    restart: unless-stopped
    ports:
      - "8645:8545"    # JSON-RPC
      - "60001:60000"  # libp2p
    command: >
      --rln-relay=true
      --rln-relay-dynamic=true
      --rln-relay-eth-client-address=http://reth:8545
      --relay=true
      --store=true
      --keep-alive=true
      --max-connections=50
      --nat=extip:nwaku-1
      --listen-address=0.0.0.0
      --tcp-port=60000
      --rpc=true
      --rpc-address=0.0.0.0
      --rpc-port=8545
    networks:
      - stealth-net

  nwaku-2:
    image: statusim/nwaku:latest
    container_name: nwaku-friend-2
    restart: unless-stopped
    ports:
      - "8646:8545"    # JSON-RPC
      - "60002:60000"  # libp2p
    command: >
      --rln-relay=true
      --rln-relay-dynamic=true
      --rln-relay-eth-client-address=http://reth:8545
      --relay=true
      --store=true
      --keep-alive=true
      --max-connections=50
      --nat=extip:nwaku-2
      --listen-address=0.0.0.0
      --tcp-port=60000
      --rpc=true
      --rpc-address=0.0.0.0
      --rpc-port=8545
    networks:
      - stealth-net

  nwaku-3:
    image: statusim/nwaku:latest
    container_name: nwaku-friend-3
    restart: unless-stopped
    ports:
      - "8647:8545"    # JSON-RPC
      - "60003:60000"  # libp2p
    command: >
      --rln-relay=true
      --rln-relay-dynamic=true
      --rln-relay-eth-client-address=http://reth:8545
      --relay=true
      --store=true
      --keep-alive=true
      --max-connections=50
      --nat=extip:nwaku-3
      --listen-address=0.0.0.0
      --tcp-port=60000
      --rpc=true
      --rpc-address=0.0.0.0
      --rpc-port=8545
    networks:
      - stealth-net

  # Stealth sidecar instances
  stealth-sidecar-1:
    build: .
    container_name: stealth-sidecar-1
    restart: unless-stopped
    ports:
      - "9091:9090"    # Metrics
    volumes:
      - ./config/sidecar-1.toml:/config.toml:ro
    command: >
      --config /config.toml
      --lighthouse-api http://lighthouse:5052
      --nwaku-rpc http://nwaku-1:8545
      --metrics-port 9090
    depends_on:
      - lighthouse
      - nwaku-1
      - nwaku-2
      - nwaku-3
    networks:
      - stealth-net

  stealth-sidecar-2:
    build: .
    container_name: stealth-sidecar-2
    restart: unless-stopped
    ports:
      - "9092:9090"    # Metrics
    volumes:
      - ./config/sidecar-2.toml:/config.toml:ro
    command: >
      --config /config.toml
      --lighthouse-api http://lighthouse:5052
      --nwaku-rpc http://nwaku-2:8545
      --metrics-port 9090
    depends_on:
      - lighthouse
      - nwaku-1
      - nwaku-2
      - nwaku-3
    networks:
      - stealth-net

  stealth-sidecar-3:
    build: .
    container_name: stealth-sidecar-3
    restart: unless-stopped
    ports:
      - "9093:9090"    # Metrics
    volumes:
      - ./config/sidecar-3.toml:/config.toml:ro
    command: >
      --config /config.toml
      --lighthouse-api http://lighthouse:5052
      --nwaku-rpc http://nwaku-3:8545
      --metrics-port 9090
    depends_on:
      - lighthouse
      - nwaku-1
      - nwaku-2
      - nwaku-3
    networks:
      - stealth-net

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - stealth-net

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=stealth
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - stealth-net

  # RAINBOW attack simulator (for demonstration)
  rainbow-attacker:
    build: .
    container_name: rainbow-attacker
    restart: "no"  # Only run on demand
    profiles:
      - demo
    command: >
      rainbow-attack-tool
      --duration 120
      --confidence 0.8
      --output /results/rainbow-results.json
    volumes:
      - ./results:/results
    networks:
      - stealth-net

networks:
  stealth-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  reth_data:
  lighthouse_data:
  validator_keys:
  prometheus_data:
  grafana_data: